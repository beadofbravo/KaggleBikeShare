## remove zero variance predictors
step_zv(all_predictors()) %>%
## Cleaning Section
## get rid the one day with weather = 4
step_filter(weather != 4) %>%
## get rid of registered and casual columns, unusable in prediction
step_select(-c("registered", "casual"))
prepped_recipe <- prep(my_recipe) #set up processing using bike
prepped_recipe <- prep(my_recipe) %>%#set up processing using bike
juice()
view(prepped_recipe)
## Read in the Data
bike <- vroom("./test.csv")
view(bike)
dplyr::glimpse(bike)
## Create a "recipe"
my_recipe <- recipe(count ~ ., data = bike) %>%
## Feature Engineering Section
## make weather a factor
step_num2factor(weather, levels = c("Clear", "Few clouds", "Partly Cloudy", "Partly cloudy")) %>%
## create hour and minutes variable
step_time(datetime, features = c("hour", "minute")) %>%
## get days of the week
step_date(datetime, features = "dow") %>%
## make season a factor
step_num2factor(season, levels = c("Spring", "Summer", "Fall", "Winter")) %>%
## remove zero variance predictors
step_zv(all_predictors()) %>%
## Cleaning Section
## get rid the one day with weather = 4
step_filter(weather != 4) %>%
## get rid of registered and casual columns, unusable in prediction
step_select(-c("registered", "casual"))
## Read in the Data
bike <- vroom("./test.csv")
## Create a "recipe"
my_recipe <- recipe(count ~ ., data = bike) %>%
## Feature Engineering Section
## make weather a factor
step_num2factor(weather, levels = c("Clear", "Few clouds", "Partly Cloudy", "Partly cloudy")) %>%
## create hour and minutes variable
step_time(datetime, features = c("hour", "minute")) %>%
## get days of the week
step_date(datetime, features = "dow") %>%
## make season a factor
step_num2factor(season, levels = c("Spring", "Summer", "Fall", "Winter")) %>%
## remove zero variance predictors
step_zv(all_predictors()) %>%
## Cleaning Section
## get rid the one day with weather = 4
step_filter(weather != 4) %>%
## get rid of registered and casual columns, unusable in prediction
step_select(-c("registered", "casual"))
view(bike)
library(tidyverse)
library(tidymodels)
library(vroom)
## Read in the Data
bike <- vroom("./test.csv")
view(bike)
dplyr::glimpse(bike)
## Create a "recipe"
my_recipe <- recipe(count ~ ., data = bike) %>%
## Feature Engineering Section
## make weather a factor
step_num2factor(weather, levels = c("Clear", "Few clouds", "Partly Cloudy", "Partly cloudy")) %>%
## create hour and minutes variable
step_time(datetime, features = c("hour", "minute")) %>%
## get days of the week
step_date(datetime, features = "dow") %>%
## make season a factor
step_num2factor(season, levels = c("Spring", "Summer", "Fall", "Winter")) %>%
## remove zero variance predictors
step_zv(all_predictors()) %>%
## Cleaning Section
## get rid the one day with weather = 4
step_filter(weather != 4) %>%
## get rid of registered and casual columns, unusable in prediction
step_select(-c("registered", "casual"))
## Read in the Data
bike_test <- vroom("./test.csv")
bike_train <- vroom("./train.csv")
## Create a "recipe"
my_recipe <- recipe(count ~ ., data = bike_train) %>%
## Feature Engineering Section
## make weather a factor
step_num2factor(weather, levels = c("Clear", "Few clouds", "Partly Cloudy", "Partly cloudy")) %>%
## create hour and minutes variable
step_time(datetime, features = c("hour", "minute")) %>%
## get days of the week
step_date(datetime, features = "dow") %>%
## make season a factor
step_num2factor(season, levels = c("Spring", "Summer", "Fall", "Winter")) %>%
## remove zero variance predictors
step_zv(all_predictors()) %>%
## Cleaning Section
## get rid the one day with weather = 4
step_filter(weather != 4) %>%
## get rid of registered and casual columns, unusable in prediction
step_select(-c("registered", "casual"))
prepped_recipe <- prep(my_recipe) %>%#set up processing using bike
juice()
bake(prepped_recipe, new_data = bike_test)
view(prepped_recipe)
bake(my_recipe, new_data = bike_test)
## Create a "recipe"
my_recipe <- recipe(count ~ ., data = bike_train) %>%
## Feature Engineering Section
## make weather a factor
step_num2factor(weather, levels = c("Clear", "Few clouds", "Partly Cloudy", "Partly cloudy")) %>%
## create hour and minutes variable
step_time(datetime, features = c("hour", "minute")) %>%
## get days of the week
step_date(datetime, features = "dow") %>%
## make season a factor
step_num2factor(season, levels = c("Spring", "Summer", "Fall", "Winter")) %>%
## remove zero variance predictors
step_zv(all_predictors()) %>%
## Cleaning Section
## get rid the one day with weather = 4
step_filter(weather != 4) %>%
## get rid of registered and casual columns, unusable in prediction
step_select(-c("registered", "casual")) %>%
prep()
prepped_recipe <- my_recipe %>%#set up processing using bike
juice()
prep_train <- my_recipe %>%#set up processing using bike
juice()
bake(my_recipe, new_data = bike_test)
View(bike_test)
## Create a "recipe"
my_recipe <- recipe(count ~ ., data = bike_train) %>%
## Feature Engineering Section
## make weather a factor
step_num2factor(weather, levels = c("Clear", "Few clouds", "Partly Cloudy", "Partly cloudy")) %>%
## create hour and minutes variable
step_time(datetime, features = c("hour", "minute")) %>%
## get days of the week
step_date(datetime, features = "dow") %>%
## make season a factor
step_num2factor(season, levels = c("Spring", "Summer", "Fall", "Winter")) %>%
## remove zero variance predictors
step_zv(all_predictors()) %>%
## Cleaning Section
## get rid the one day with weather = 4
step_filter(weather != 4) %>%
## get rid of registered and casual columns, unusable in prediction
prep()
prep_train <- my_recipe %>%#set up processing using bike
juice()
bake(my_recipe, new_data = bike_test)
## Create a "recipe"
my_recipe <- recipe(count ~ .-causal-registered, data = bike_train) %>%
## Feature Engineering Section
## make weather a factor
step_num2factor(weather, levels = c("Clear", "Few clouds", "Partly Cloudy", "Partly cloudy")) %>%
## create hour and minutes variable
step_time(datetime, features = c("hour", "minute")) %>%
## get days of the week
step_date(datetime, features = "dow") %>%
## make season a factor
step_num2factor(season, levels = c("Spring", "Summer", "Fall", "Winter")) %>%
## remove zero variance predictors
step_zv(all_predictors()) %>%
## Cleaning Section
## get rid the one day with weather = 4
step_filter(weather != 4) %>%
## get rid of registered and casual columns, unusable in prediction
prep()
## Create a "recipe"
my_recipe <- recipe(count ~ ., data = bike_train) %>%
step_rm(c('casual','registered')) %>%
## Feature Engineering Section
## make weather a factor
step_num2factor(weather, levels = c("Clear", "Few clouds", "Partly Cloudy", "Partly cloudy")) %>%
## create hour and minutes variable
step_time(datetime, features = c("hour", "minute")) %>%
## get days of the week
step_date(datetime, features = "dow") %>%
## make season a factor
step_num2factor(season, levels = c("Spring", "Summer", "Fall", "Winter")) %>%
## remove zero variance predictors
step_zv(all_predictors()) %>%
## Cleaning Section
## get rid the one day with weather = 4
step_filter(weather != 4) %>%
## get rid of registered and casual columns, unusable in prediction
prep()
prep_train <- my_recipe %>%#set up processing using bike
juice()
View(prep_train)
bake(my_recipe, new_data = bike_test)
library(tidyverse)
library(tidymodels)
library(vroom)
## Read in the Data
bike_test <- vroom("./test.csv")
bike_train <- vroom("./train.csv")
bike_train <- bike_train %>%
-select("casual","registered")
bike_train <- bike_train %>%
-select(casual,registered)
View(bike_train)
bike_train <- bike_train %>%
-select(registered)
bike_train <- bike_train %>%
-select('registered')
select(-c('casual','registered')
bike_train <- bike_train %>%
bike_train <- bike_train %>%
select(-c('casual','registered'))
## Create a "recipe"
my_recipe <- recipe(count ~ ., data = bike_train) %>%
## Feature Engineering Section
## make weather a factor
step_num2factor(weather, levels = c("Clear", "Few clouds", "Partly Cloudy", "Partly cloudy")) %>%
## create hour and minutes variable
step_time(datetime, features = c("hour", "minute")) %>%
## get days of the week
step_date(datetime, features = "dow") %>%
## make season a factor
step_num2factor(season, levels = c("Spring", "Summer", "Fall", "Winter")) %>%
## remove zero variance predictors
step_zv(all_predictors()) %>%
## Cleaning Section
## get rid the one day with weather = 4
step_filter(weather != 4) %>%
## get rid of registered and casual columns, unusable in prediction
prep()
prep_train <- my_recipe %>%#set up processing using bike
juice()
view(prepped_recipe)
bake(my_recipe, new_data = bike_test)
library(tidyverse)
library(tidymodels)
library(vroom)
## Read in the Data
bike_test <- vroom("./test.csv")
bike_train <- vroom("./train.csv")
bike_train <- bike_train %>%
select(-c('casual','registered'))
view(bike)
dplyr::glimpse(bike)
## Create a "recipe"
my_recipe <- recipe(count ~ ., data = bike_train) %>%
## Feature Engineering Section
## make weather a factor
step_num2factor(weather, levels = c("Clear", "Few clouds", "Partly Cloudy", "Partly cloudy")) %>%
## create hour and minutes variable
step_time(datetime, features = c("hour", "minute")) %>%
## get days of the week
step_date(datetime, features = "dow") %>%
## make season a factor
step_num2factor(season, levels = c("Spring", "Summer", "Fall", "Winter")) %>%
## remove zero variance predictors
step_zv(all_predictors()) %>%
## Cleaning Section
## get rid the one day with weather = 4
step_filter(weather != 4) %>%
## get rid of registered and casual columns, unusable in prediction
prep()
prep_train <- my_recipe %>%#set up processing using bike
juice()
bake(my_recipe, new_data = bike_test)
view(bike_test)
View(my_recipe)
View(bike_test)
View(prep_train)
view(prep_train)
library(tidymodels)
library(vroom)
## Read in the Data
bike_test <- vroom("./test.csv")
## Read in the Data
bike_test <- vroom("./test.csv")
bike_train <- vroom("./train.csv")
bike_train <- bike_train %>%
select(-c('casual','registered'))
## Create a "recipe"
my_recipe <- recipe(count ~ ., data = bike_train) %>%
## Feature Engineering Section
## make weather a factor
step_mutate(weather=factor(weather)) %>%
## create hour and minutes variable
step_time(datetime, features = c("hour", "minute")) %>%
## get days of the week
step_date(datetime, features = "dow") %>%
## make season a factor
step_mutate(season=factor(season)) %>%
## remove zero variance predictors
step_zv(all_predictors())
prep_train <- my_recipe %>%#set up processing using bike
juice()
## Create a "recipe"
my_recipe <- recipe(count ~ ., data = bike_train) %>%
## Feature Engineering Section
## make weather a factor
step_mutate(weather=factor(weather)) %>%
## create hour and minutes variable
step_time(datetime, features = c("hour", "minute")) %>%
## get days of the week
step_date(datetime, features = "dow") %>%
## make season a factor
step_mutate(season=factor(season)) %>%
## remove zero variance predictors
step_zv(all_predictors()) %>%
## change weather of 4 into 3
prep()
prep_train <- my_recipe %>%#set up processing using bike
juice()
bake(my_recipe, new_data = bike_test)
view(prep_train)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bike_train)
bike_predict <- predict(bike_workflow, new_data=bike_test)
view(bike_predict)
df <- data.frame(id = bike_test$datetime, bike_predict$.pred)
view(df)
pmax([,2], 0)
df %>%
colnames(df) <- c(datetime, count)
df %>%
colnames(df) <- c("datetime", "count")
colnames(df) <- c("datetime", "count")
colnames(df) <- c("datetime", "count") # change column names to fit format
view(df)
df[count < 0] <- 0
df[df$count < 0] <- 0
datapositive[df$count < 0] <- 0
df[df$count < 0] <- 0
df_positive[df_positive < 0] <- 0
df_positive <- df
df_positive[df_positive < 0] <- 0
view(df)
dplyr::glimpse(df)
## Read in the Data
bike <- vroom("c://Users/peter/Desktop/BYU School/fall 2023/predictive analytics/KaggleBikeShare/train.csv")
# view(bike) to view data set
dplyr::glimpse(bike)
view(df)
df_positive[df_positive < 0] <- 0
view(df_positive)
?vroom_write
vroom_write(x = df_positive, file = "submission.csv")
vroom_write(x = df_positive, file = "./submission.csv")
vroom_write(x = df_positive, file = "./submission.csv", delim = ',')
vroom_write(x = df_positive, file = "./submission.csv", delim = ' ')
vroom_write(x = df_positive, file = "./submission.csv", delim = '')
vroom_write(x = df_positive, file = "./submission.csv", delim = ' ')
dplyr::glimpse(df_positive)
df_positive$datetime <- as.factor(df_positive$datetime)
view(df_positive)
dplyr::glimpse(df_positive)
vroom_write(x = df_positive, file = "./submission.csv", delim = ',')
df <- data.frame(id = bike_test$datetime, bike_predict$.pred)
colnames(df) <- c("datetime", "count") # change column names to fit format
df_positive <- df
df_positive[df_positive < 0] <- 0
df_positive$datetime <- as.factor(df_positive$datetime)
dplyr::glimpse(df_positive)
view(df_positive)
vroom_write(x = df_positive, file = "./submission.csv", delim = ',')
view(df_positive)
df <- data.frame(id = bike_test$datetime, bike_predict$.pred)
colnames(df) <- c("datetime", "count") # change column names to fit format
df_positive <- df
df_positive[df_positive < 0] <- 0
view(df_positive)
dplyr::glimpse(df_positive)
vroom_write(x = df_positive, file = "./submission.csv", delim = ',')
df_positive[["datetime"]] <-
as.POSIXct(df_positive[["datetime"]] * (60*60*24)
, origin="1899-12-30"
, tz="GMT")
df_positive[["datetime"]] <-
as.POSIXct(df_positive[["datetime"]] * (60*60*24)
, origin="1899-12-30"
, tz="GMT")
library(openxlsx)
install.packages("openxlsx")
library(openxlsx)
df_positive[["datetime"]] <-
as.POSIXct(df_positive[["datetime"]] * (60*60*24)
, origin="1899-12-30"
, tz="GMT")
convertToDateTime(df_positive$datetime, origin = "1900-01-01")
df_positive$datetime <- as.factor(df_positive$datetime)
dplyr::glimpse(df_positive)
vroom_write(x = df_positive, file = "./submission.csv", delim = ',')
vroom_write(x = df_positive, file = "./submission.csv", delim = ',')
dplyr::glimpse(df_positive)
view(df_positive)
install.packages("lubridate")
install.packages("lubridate")
library(lubridate)
## Read in the Data
bike_test <- vroom("./test.csv")
bike_train <- vroom("./train.csv")
bike_train <- bike_train %>%
select(-c('casual','registered'))
## Create a "recipe"
my_recipe <- recipe(count ~ ., data = bike_train) %>%
## Feature Engineering Section
## make weather a factor
step_mutate(weather=factor(weather)) %>%
## create hour and minutes variable
step_time(datetime, features = c("hour", "minute")) %>%
## get days of the week
step_date(datetime, features = "dow") %>%
## make season a factor
step_mutate(season=factor(season)) %>%
## remove zero variance predictors
step_zv(all_predictors()) %>%
## change weather of 4 into 3
prep()
prep_train <- my_recipe %>%#set up processing using bike
juice()
bake(my_recipe, new_data = bike_test)
library(tidymodels)
function (package, help, pos = 2, lib.loc = NULL, character.only = FALSE,
logical.return = FALSE, warn.conflicts, quietly = FALSE,
verbose = getOption("verbose"), mask.ok, exclude, include.only,
attach.required = missing(include.only))
library(tidyverse)
library(tidymodels)
library(vroom)
library(openxlsx)
library(lubridate)
## Read in the Data
bike_test <- vroom("./test.csv")
bike_train <- vroom("./train.csv")
bike_train <- bike_train %>%
select(-c('casual','registered'))
## Create a "recipe"
my_recipe <- recipe(count ~ ., data = bike_train) %>%
## Feature Engineering Section
## make weather a factor
step_mutate(weather=factor(weather)) %>%
## create hour and minutes variable
step_time(datetime, features = c("hour", "minute")) %>%
## get days of the week
step_date(datetime, features = "dow") %>%
## make season a factor
step_mutate(season=factor(season)) %>%
## remove zero variance predictors
step_zv(all_predictors()) %>%
## change weather of 4 into 3
prep()
prep_train <- my_recipe %>%#set up processing using bike
juice()
bake(my_recipe, new_data = bike_test)
dplyr::glimpse(prep_train)
view(prep_train)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bike_train)
bike_predict <- predict(bike_workflow, new_data=bike_test)
view(bike_predict)
df <- data.frame(id = bike_test$datetime, bike_predict$.pred)
colnames(df) <- c("datetime", "count") # change column names to fit format
df_positive <- df
df_positive[df_positive < 0] <- 0
df_positive$datetime <- as.factor(df_positive$datetime)
dplyr::glimpse(df_positive)
view(df_positive)
df_positive$datetime <- as.character.Date(df_positive$datetime)
dplyr::glimpse(df_positive)
df_positive$datetime <- as.character.POSIXt(df_positive$datetime)
dplyr::glimpse(df_positive)
view(df_positive)
df_positive$datetime <- as.character.default(df_positive$datetime)
dplyr::glimpse(df_positive)
view(df_positive)
df_positive$datetime <- as.data.frame.AsIs(df_positive$datetime)
dplyr::glimpse(df_positive)
df_positive$datetime <- as.character(df_positive$datetime)
dplyr::glimpse(df_positive)
df_positive$datetime <- as.POSTXct(df_positive$datetime)
df_positive$datetime <- as.POSIXct(df_positive$datetime)
dplyr::glimpse(df_positive)
df <- data.frame(id = bike_test$datetime, bike_predict$.pred)
colnames(df) <- c("datetime", "count") # change column names to fit format
df_positive <- df
df_positive[df_positive < 0] <- 0
df_positive$datetime <- as.POSIXct(df_positive$datetime)
dplyr::glimpse(df_positive)
vroom_write(x = df_positive, file = "./submission.csv", delim = ',')
vroom_write(x = df_positive, file = "./submission.csv", delim = ',')
df_positive$datetime <- as.POSIXlt(df_positive$datetime)
dplyr::glimpse(df_positive)
vroom_write(x = df_positive, file = "./submission.csv", delim = ',')
strip.tz(df_positive$datetime)
df_positive$datetime <- format(mdy_hms(df_postitive$datetime)
format = "%m/%d/%Y %H:%M:%S")
format = "%m/%d/%Y %H:%M:%S")
df_positive$datetime <- format(as.POSIXct(df_postitive$datetime,
format = "%m/%d/%Y %H:%M:%S"))
df_positive$datetime <- format(as.POSIXct(.,
format = "%m/%d/%Y %H:%M:%S"))
df_positive$datetime <- format(as.POSIXct(datetime,
format = "%m/%d/%Y %H:%M:%S"))
df_positive$datetime <- format(as.POSIXct(df_positive$datetime,
format = "%m/%d/%Y %H:%M:%S"))
dplyr::glimpse(df_positive)
vroom_write(x = df_positive, file = "./submission.csv", delim = ',')
